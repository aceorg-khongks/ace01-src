#
# Sample pipelinerun for deploying an App Connect Enterprise integration server
#
# You need to modify this with details of your own App Connect application.
#
# This sample shows how to deploy a simple stand-alone App Connect application

apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  generateName: ace-pipeline-
  namespace: ace01-ci
spec:
  serviceAccountName: ace-pipeline-deployer-serviceaccount
  params:
    # ########################################################
    # where to run the App Connect application
    # ########################################################
    # what to call the IntegrationServer that runs your application
    - name: integration-server-name
      value: "books-is"
    # where to run your application
    - name: ace-namespace
      value: "ace01-ci"

    # ########################################################
    # where to find the projects to create
    # ########################################################
    # location of the git repository with your application
    - name: git-repository
      value: "https://github.com/aceorg-khongks/ace01-src"

    # name of the App Connect project to deploy
    #  This should be the name of a folder in ace-projects
    - name: ace-project-name
      value: "BooksOpenAPI3"

    #  This should be the name of a Java folder in ace-projects
    - name: java-project-name
      value: BooksOpenAPI3Java

    # name of an App Connect test project
    #  This is used to verify the bar before the new
    #  Integration Server is deployed
    #  This should be the name of a folder in ace-projects
    - name: test-project-name
      value: ""


  pipelineRef:
    name: ace-pipeline

  workspaces:
    - name: shared-workspace
      persistentVolumeClaim:
        claimName: workspace-pvc
  # workspaces:
  #   - name: shared-workspace
  #     volumeClaimTemplate:
  #       spec:
  #         storageClassName: lvms-vg1-immed
  #         accessModes:
  #           - ReadWriteOnce
  #         resources:
  #           requests:
  #             storage: 100Mi